<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/security"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd
						http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <http pattern="/*.html" security="none"/>
    <http pattern="/css/**" security="none"/>
    <http pattern="/img/**" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/plugins/**" security="none"/>
    <http pattern="/seller/add.do" security="none"/>

    <http use-expressions="false">
        <intercept-url pattern="/**" access="ROLE_SELLER"/>


        <form-login login-page="/shoplogin.html"
                    default-target-url="/admin/index.html"
                    always-use-default-target="true"
                    authentication-failure-url="/shoplogin.html"
                    />


        <!--这一步的配置作用在于使得框架的页面不被拦截-->
        <headers>
            <frame-options policy="SAMEORIGIN"/>
        </headers>

        <csrf disabled="true"/>

        <logout logout-success-url="/shoplogin.html" logout-url="logout"/>
    </http>


    <authentication-manager>
        <authentication-provider user-service-ref="userDetailService">
            <password-encoder ref="passwordEncoder"></password-encoder>
        </authentication-provider>
    </authentication-manager>


    <!--引用dubbo的服务-->
    <dubbo:application name="pinyogo_web_shop"/>
    <dubbo:registry address="zookeeper://192.168.200.128:2181"/>
    <dubbo:reference id="sellerService" interface="cn.itcast.core.service.seller.SellerService">
    </dubbo:reference>

    <!--配置自定义的认证类-->
    <beans:bean id="userDetailService" class="cn.itcast.core.service.UserDetailServiceImpl">
        <!--属性注入-->
        <beans:property name="sellerService" ref="sellerService"></beans:property>
    </beans:bean>

    <beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <authentication-manager>
        <authentication-provider>
            <user-service>
                <user name="Jobs" password="jobs" authorities="ROLE_SELLER"/>
                <user name="zhangsan" password="zhangsan" authorities="ROLE_SELLER"/>
            </user-service>
        </authentication-provider>
    </authentication-manager>

</beans:beans>